# meta developer: @angellmodules

# thanks https://github.com/C0dwiz/H.Modules/blob/main/AccountData.py#L35-L49 for accdata

import requests
from .. import loader, utils


@loader.tds
class UserInfoAngellMod(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ!"""
    strings = {"name": "AngelInfo"}

    async def client_ready(self, client, db):
        self.client = client
        self.config = loader.ModuleConfig(
            "banner_url", "https://0x0.st/s/d-on0hAQlsqVfdGs0DHC4g/X7kw.jpg",
            lambda: "–°—Å—ã–ª–∫–∞ –Ω–∞ –±–∞–Ω–Ω–µ—Ä (URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)"
        )

    async def uinfocmd(self, message):
        """<—Ä–µ–ø–ª–∞–π> –∏–ª–∏ <—é–∑–µ—Ä–Ω–µ–π–º>"""
        args = utils.get_args_raw(message)
        reply = await message.get_reply_message()

        user = None
        if args:
            try:
                user = await self.client.get_entity(args)
            except:
                await utils.answer(message, "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
                return
        elif reply:
            user = await self.client.get_entity(reply.sender_id)
        else:
            await utils.answer(message, "–£–∫–∞–∂–∏—Ç–µ —é–∑–µ—Ä–Ω–µ–π–º –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –Ω–∞ —Ä–µ–ø–ª–µ–π.")
            return

        await message.edit("<emoji document_id=5341715473882955310>‚öôÔ∏è</emoji>–ó–∞–≥—Ä—É–∂–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é...<emoji document_id=5341715473882955310>‚öôÔ∏è</emoji>")

        name = user.first_name or "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
        last_name = user.last_name or "–ù–µ —É–∫–∞–∑–∞–Ω–∞"
        username = f"@{user.username}" if user.username else "–ù–µ —É–∫–∞–∑–∞–Ω"
        id_ = user.id
        avatar = "–ï—Å—Ç—å" if user.photo else "–ù–µ—Ç"
        premium = "–ï—Å—Ç—å" if getattr(user, "premium", False) else "–ù–µ—Ç—É"
        is_bot = "–î–∞" if user.bot else "–ù–µ—Ç"
        is_verified = "–î–∞" if user.verified else "–ù–µ—Ç"
        creation_date = await self.get_creation_date(id_)

        banner_url = self.config["banner_url"]

        text = (
            f"<emoji document_id=5424892643760937442>üëÅ</emoji>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ {username}<emoji document_id=5424892643760937442>üëÅ</emoji>\n\n"
            f"<emoji document_id=5334673106202010226>‚úèÔ∏è</emoji>–ò–º—è: {name}\n"
            f"<emoji document_id=5334882760735598374>üìù</emoji>–§–∞–º–∏–ª–∏—è: {last_name}\n"
            f"<emoji document_id=5373012449597335010>üë§</emoji>–Æ–∑–µ—Ä–Ω–µ–π–º: {username}\n"
            f"<emoji document_id=5431897022456145283>üìÜ</emoji>–î–∞—Ç–∞ –∞–∫–∫–∞—É–Ω—Ç–∞: {creation_date}\n"
            f"<emoji document_id=5422683699130933153>ü™™</emoji>ID: {id_}\n"
            f"<emoji document_id=5375074927252621134>üñº</emoji>–ê–≤–∞—Ç–∞—Ä: {avatar}\n"
            f"<emoji document_id=5458799228719472718>‚≠ê</emoji>Premium: {premium}\n"
            f"<emoji document_id=5427009714745517609>‚úÖ</emoji>–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç: {is_verified}\n"
            f"<emoji document_id=5372981976804366741>ü§ñ</emoji>–ë–æ—Ç: {is_bot}"
        )

        try:
            response = requests.get(banner_url)
            response.raise_for_status()
            banner_data = response.content

            await self.client.send_file(
                message.chat_id,
                file=banner_data,
                caption=text,
                reply_to=reply.id if reply else None
            )
            await message.delete()
        except Exception as e:
            await message.edit(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–Ω–Ω–µ—Ä–∞: {e}")

    async def get_creation_date(self, tg_id: int) -> str:
   
        url = "https://restore-access.indream.app/regdate"
        headers = {
            "accept": "*/*",
            "content-type": "application/x-www-form-urlencoded",
            "user-agent": "Nicegram/92 CFNetwork/1390 Darwin/22.0.0",
            "x-api-key": "e758fb28-79be-4d1c-af6b-066633ded128",
            "accept-language": "en-US,en;q=0.9",
        }
        data = {"telegramId": tg_id}
        try:
            response = requests.post(url, headers=headers, json=data)
            if response.status_code == 200:
                return response.json()["data"]["date"]
            else:
                return "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö"
        except Exception as e:
            return f"–û—à–∏–±–∫–∞: {str(e)}"

    @loader.sudo
    async def cfg(self, message):
       
        args = utils.get_args(message)
        if len(args) == 0:
            await message.edit("<b>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:</b> .cfg <–ø–∞—Ä–∞–º–µ—Ç—Ä> <–∑–Ω–∞—á–µ–Ω–∏–µ>\n\n"
                               "<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:</b>\n"
                               "banner_url ‚Äî URL –±–∞–Ω–Ω–µ—Ä–∞")
            return

        param = args[0].lower()
        value = " ".join(args[1:])

        if param == "banner_url":
            self.config["banner_url"] = value
            await message.edit(f"<b>URL –±–∞–Ω–Ω–µ—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω:</b> {value}")
        else:
            await message.edit("<b>–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä.</b>")







#made by @sawwnapix
